import threading
import random
import time
import sys

def Calculation (k):

    global sums

    n = round(length/N * (k+1))
    sum = 0
    if n > length:
        n = length
    for i in range (round(length/N * (k)), n):
        sum+= massiv[i]
    sums += sum

sums = 0
massiv = []
for _ in range(20):
	massiv.append(random.randint(0,20))
length = len(massiv)
for N in range (1, length):
    sums = 0
    start = time.time()

    threads = [threading.Thread(target=Calculation(k)) for k in range(N)]
    for thread in threads:
        thread.start()
    for thread in threads:
        thread.join()
    finish = time.time()
    print (round (finish - start, 4))